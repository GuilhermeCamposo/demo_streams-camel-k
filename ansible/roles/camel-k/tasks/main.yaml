- name: Evaluate Operator Group {{ cluster_project }}
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    definition:
      metadata:
        name: '{{ cluster_project }}-operatorgroup'
        namespace: '{{ cluster_project }}'
      spec:
        targetNamespaces:
          - '{{ cluster_project }}'

- name: Evaluate Camel K Subscription
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    definition:
      metadata:
        name: red-hat-camel-k
        namespace: '{{ cluster_project }}'
      spec:
        channel: '{{ camel_k_channel }}'
        name: '{{ camel_k_name }}'
        source: '{{ camel_k_source }}'
        sourceNamespace: openshift-marketplace
        installPlanApproval: Automatic

- name: Wait Camel K Operator To Be Running
  kubernetes.core.k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    api_version: v1
    kind: Pod
    namespace: '{{ cluster_project }}'
    label_selectors:
      - app = camel-k
      - name = camel-k-operator
    field_selectors:
      - status.phase=Running
  register: r_camelk_operator_pod
  retries: 120
  delay: 10
  until: r_camelk_operator_pod.resources | list | length == 1

- name: Evaluate Maven and IntegrationPlatform
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: present
    namespace: '{{ cluster_project }}'
    resource_definition: "{{ lookup('file', item) }}"
  loop:
    - maven-settings.yml
    - integration-platform.yml

- name: Evaluate kafka-scram Kamelets
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    namespace: '{{ cluster_project }}'
    state: present
    resource_definition: "{{ lookup('file', item) }}"
  register: _kafka
  retries: 1
  delay: 10
  until: not _kafka.failed
  loop:
    - kafka-scram-sink.yml
    - kafka-scram-source.yml
